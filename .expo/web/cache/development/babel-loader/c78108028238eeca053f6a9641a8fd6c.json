{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jgabatin/Desktop/App/Lentl/app/config/slider.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport colors from \"./colors\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width;\n\nvar height = width * 0.6;\n\nvar Slider = function (_React$Component) {\n  _inherits(Slider, _React$Component);\n\n  var _super = _createSuper(Slider);\n\n  function Slider() {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      active: 0\n    };\n\n    _this.change = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var slide = Math.ceil(nativeEvent.contentOffset.x / nativeEvent.layoutMeasurement.width);\n\n      if (slide != _this.state.active) {\n        _this.setState({\n          active: slide\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.slides,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        pagingEnabled: true,\n        horizontal: true,\n        onScroll: this.change,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scroll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, this.props.images.map(function (images, index) {\n        return React.createElement(Image, {\n          key: index,\n          source: {\n            uri: images\n          },\n          style: styles.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        });\n      })), React.createElement(View, {\n        style: styles.pagination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, this.props.images.map(function (i, k) {\n        return React.createElement(Text, {\n          key: k,\n          style: k == _this2.state.active ? styles.pagTextActive : styles.pagText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        }, \"\\u25CF\");\n      })));\n    }\n  }]);\n\n  return Slider;\n}(React.Component);\n\nexport { Slider as default };\nvar styles = StyleSheet.create({\n  slides: {\n    marginTop: 100,\n    width: width,\n    height: height\n  },\n  scroll: {\n    width: width,\n    height: height\n  },\n  images: {\n    width: width,\n    height: height,\n    resizeMode: 'cover'\n  },\n  pagination: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    alignSelf: 'center'\n  },\n  pagText: {\n    fontSize: width / 30,\n    margin: 3,\n    color: '#888'\n  },\n  pagTextActive: {\n    fontSize: width / 30,\n    margin: 3,\n    color: colors.primary\n  }\n});","map":{"version":3,"sources":["/Users/jgabatin/Desktop/App/Lentl/app/config/slider.js"],"names":["React","colors","Dimensions","get","width","height","Slider","state","active","change","nativeEvent","slide","Math","ceil","contentOffset","x","layoutMeasurement","setState","styles","slides","scroll","props","images","map","index","uri","pagination","i","k","pagTextActive","pagText","Component","StyleSheet","create","marginTop","resizeMode","flexDirection","position","bottom","alignSelf","fontSize","margin","color","primary"],"mappings":"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","sourcesContent":["// Lentl - slider.js\n// Copyright (c) John Gabatin. All rights reserved.\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  SafeAreaView,\n  ScrollView,\n  Dimensions,\n  Image,\n  Text } from 'react-native';\n\nimport colors from './colors';\n\nconst { width } = Dimensions.get(\"window\");\nconst height = width * 0.6;\n\nexport default class Slider extends React.Component {\n  state = {\n    active: 0\n  }\n\n  change = ({nativeEvent}) => {\n    const slide = Math.ceil(nativeEvent.contentOffset.x /\n                            nativeEvent.layoutMeasurement.width);\n\n    if (slide != this.state.active) {\n      this.setState({active: slide});\n    }\n  }\n\n  render() {\n    return (\n      <SafeAreaView style={styles.slides}>\n\n        {/* Slider structure */}\n        <ScrollView\n          pagingEnabled\n          horizontal\n          onScroll={this.change}\n          showsHorizontalScrollIndicator={false}\n          style={styles.scroll}\n        >\n          {\n            this.props.images.map((images, index) => (\n              <Image\n                key={index}\n                source={{uri: images}}\n                style={styles.images} />\n            ))\n          }\n        </ScrollView>\n\n        {/* Slider buttons */}\n        <View style={styles.pagination}>\n          {\n            this.props.images.map((i, k) => (\n              <Text key={k} style={k==this.state.active ?\n                                      styles.pagTextActive :\n                                      styles.pagText}>‚óè</Text>\n            ))\n          }\n        </View>\n\n      </SafeAreaView>\n    )\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  slides: {\n    marginTop: 100,\n    width,\n    height,\n  },\n  scroll: {\n    width,\n    height,\n  },\n  images: {\n    width,\n    height,\n    resizeMode: 'cover',\n  },\n  pagination: {\n    flexDirection:'row',\n    position:'absolute',\n    bottom: 0,\n    alignSelf: 'center',\n  },\n  pagText: {\n    fontSize: (width / 30),\n    margin: 3,\n    color: '#888',\n  },\n  pagTextActive: {\n    fontSize: (width / 30),\n    margin: 3,\n    color: colors.primary,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}